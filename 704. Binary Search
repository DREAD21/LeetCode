//Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.
//
// You must write an algorithm with O(log n) runtime complexity.

public class Solution {
    public int Search(int[] nums, int target) {
        Array.Sort(nums);
            int left = 0;
            int right = nums.Length;
            while (left <= right)
            {
                int middle = (left + right) / 2;
                if (middle > nums.Length - 1 || middle < 0)
                {
                    return -1;
                }
                if (target == nums[middle])
                {
                    return middle;
                }
                if (target <= nums[middle])
                {
                    right = middle - 1;
                }
                else
                {
                    left = middle + 1;
                }
            }
            return -1;
    }
}
